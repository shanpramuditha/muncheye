<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    public function search($title,$addedDateFrom,$addedDateTo,$updatedDateFrom,$updatedDateTo,$status){
        $qb = $this->createQueryBuilder('o')
            ->select('o');
        if($title != null){
           $qb->andwhere('o.product LIKE :title')
               ->setParameter('title','%'.$title.'%')
           ;
        }

        if($status != null){
            $qb->andWhere('o.status = :status')
                ->setParameter('status',$status);
        }

        if($addedDateFrom != null or $addedDateTo != null){
            if($addedDateFrom != null){
                $addedDateFrom = \DateTime::createFromFormat('m/d/Y', $addedDateFrom);
            }
            if($addedDateTo != null){
                $addedDateTo = \DateTime::createFromFormat('m/d/Y', $addedDateTo);
            }
            $qb->andWhere(
                $qb->expr()->between(
                    'o.datetime',
                    ':addedFrom',
                    ':addedTo'
                )
            )
                ->setParameter('addedFrom', $addedDateFrom)
                ->setParameter('addedTo', $addedDateTo);
        }

        if($updatedDateFrom != null or $updatedDateFrom != null){
            if($updatedDateFrom != null){
                $updatedDateFrom = \DateTime::createFromFormat('m/d/Y', $updatedDateFrom);
            }
            if($updatedDateTo != null){
                $updatedDateTo = \DateTime::createFromFormat('m/d/Y', $updatedDateTo);
            }
            $qb->andWhere(
                $qb->expr()->between(
                    'o.datetime',
                    ':updatedFrom',
                    ':updatedTo'
                )
            )
                ->setParameter('updatedFrom', $updatedDateFrom)
                ->setParameter('updatedTo', $updatedDateTo);
        }

        return $qb->getQuery()->getResult();
    }
}
